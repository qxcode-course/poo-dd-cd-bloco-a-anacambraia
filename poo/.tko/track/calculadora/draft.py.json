{
    "patches": [
        {
            "label": "2025-09-30_16-58-27",
            "content": "@@ -502,20 +502,20 @@\n %5B0%5D == %22\n-init\n+show\n %22:%0A     \n@@ -525,109 +525,25 @@\n     \n-display = args%5B1%5D%0A            battery = args%5B2%5D%0A            calculadora = Calculator(display, battery\n+print(calculadora\n )%0A  \n@@ -557,36 +557,36 @@\n lif args%5B0%5D == %22\n-show\n+init\n %22:%0A            p\n@@ -584,33 +584,15 @@\n         \n-print(calculadora)\n %0Amain()\n",
            "lines": "20"
        },
        {
            "label": "2025-09-30_17-01-11",
            "content": "@@ -333,12 +333,8 @@\n (%22%22,\n- %22%22,\n  %22%22)\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_17-01-31",
            "content": "@@ -543,16 +543,46 @@\n args%5B1%5D%0A\n+            battery = args%5B2%5D%0A\n         \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_17-02-46",
            "content": "@@ -587,16 +587,25 @@\n (display\n+, battery\n )%0A      \n",
            "lines": "21"
        },
        {
            "label": "2025-09-30_17-02-56",
            "content": "@@ -591,29 +591,8 @@\n play\n-, battery, batteryMax\n )%0A  \n",
            "lines": "21"
        },
        {
            "label": "2025-09-30_17-06-18",
            "content": "@@ -596,16 +596,28 @@\n  battery\n+, batteryMax\n )%0A      \n",
            "lines": "21"
        },
        {
            "label": "2025-09-30_17-06-26",
            "content": "@@ -547,38 +547,8 @@\n %5B1%5D%0A\n-            battery = args%5B2%5D%0A\n     \n",
            "lines": "21"
        },
        {
            "label": "2025-09-30_17-08-04",
            "content": "@@ -112,17 +112,23 @@\n : int = \n-0\n+battery\n %0A       \n@@ -196,12 +196,15 @@\n t = \n-0.00\n+display\n %0A   \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_17-12-40",
            "content": "@@ -504,16 +504,76 @@\n %22init%22:%0A\n+            display = args%5B1%5D%0A            battery = args%5B2%5D%0A\n         \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_17-12-55",
            "content": "@@ -508,38 +508,32 @@\n t%22:%0A            \n-print(\n calculadora)%0A   \n@@ -527,16 +527,46 @@\n culadora\n+ = Calculator(display, battery\n )%0A      \n",
            "lines": "20"
        },
        {
            "label": "2025-09-30_17-13-19",
            "content": "@@ -112,23 +112,17 @@\n : int = \n-battery\n+0\n %0A       \n@@ -186,23 +186,20 @@\n : int = \n-display\n+0.00\n %0A    def\n@@ -320,16 +320,20 @@\n tor (%22%22,\n+ %22%22,\n  %22%22)%0A   \n@@ -520,109 +520,25 @@\n     \n-display = args%5B1%5D%0A            battery = args%5B2%5D%0A            calculadora = Calculator(display, battery\n+print(calculadora\n )%0A  \n",
            "lines": "20"
        },
        {
            "label": "2025-09-30_17-13-53",
            "content": "@@ -333,12 +333,8 @@\n (%22%22,\n- %22%22,\n  %22%22)\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_17-14-06",
            "content": "@@ -540,17 +540,17 @@\n  = args%5B\n-0\n+1\n %5D%0A      \n@@ -562,33 +562,33 @@\n  battery = args%5B\n-1\n+2\n %5D%0A            ca\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_19-16-31",
            "content": "@@ -544,9 +544,9 @@\n rgs%5B\n-1\n+0\n %5D%0A  \n@@ -570,17 +570,17 @@\n  = args%5B\n-2\n+1\n %5D%0A      \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_19-16-46",
            "content": "@@ -112,17 +112,23 @@\n : int = \n-0\n+battery\n %0A       \n@@ -196,12 +196,15 @@\n t = \n-0.00\n+display\n %0A   \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_19-18-51",
            "content": "@@ -112,23 +112,17 @@\n : int = \n-battery\n+0\n %0A       \n@@ -186,23 +186,20 @@\n : int = \n-display\n+0.00\n %0A    def\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_19-24-30",
            "content": "@@ -48,16 +48,34 @@\n y : int,\n+ batteryMax : int,\n  display\n@@ -203,46 +203,8 @@\n play\n-%0A%0A    def calculator(self, batteryMax)\n %0A   \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_19-30-21",
            "content": "@@ -183,16 +183,53 @@\n isplay%0A%0A\n+    def calculator(self, batteryMax)%0A\n     def \n",
            "lines": "24"
        },
        {
            "label": "2025-09-30_19-30-38",
            "content": "@@ -52,26 +52,8 @@\n int,\n- batteryMax : int,\n  dis\n@@ -187,45 +187,8 @@\n ay%0A%0A\n-    def calculator(self, batteryMax)%0A\n     \n",
            "lines": "23"
        },
        {
            "label": "2025-09-30_19-30-59",
            "content": "@@ -201,16 +201,52 @@\n isplay%0A%0A\n+    def calculator(self, batteryMax)\n %0A    def\n",
            "lines": "24"
        },
        {
            "label": "2025-09-30_19-31-09",
            "content": "@@ -112,17 +112,23 @@\n : int = \n-0\n+battery\n %0A       \n@@ -190,19 +190,21 @@\n y : \n-float = 0.0\n+int = display\n %0A%0A%0A \n",
            "lines": "24"
        },
        {
            "label": "2025-09-30_20-56-52",
            "content": "@@ -507,16 +507,76 @@\n %22init%22:%0A\n+            display = args%5B1%5D%0A            battery = args%5B2%5D%0A\n         \n@@ -604,16 +604,25 @@\n culator(\n+display, \n battery)\n",
            "lines": "24"
        },
        {
            "label": "2025-09-30_20-58-13",
            "content": "@@ -548,20 +548,15 @@\n tor(\n-int(args%5B1%5D)\n+battery\n )%0A  \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_20-58-55",
            "content": "@@ -320,16 +320,24 @@\n ulator (\n+%22%22, %22%22, \n %22%22)%0A    \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-00-33",
            "content": "@@ -320,17 +320,18 @@\n ulator (\n-0\n+%22%22\n )%0A    wh\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-00-52",
            "content": "@@ -324,14 +324,9 @@\n or (\n-%22%22, %22%22\n+0\n )%0A  \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-02-36",
            "content": "@@ -327,12 +327,8 @@\n (%22%22,\n- %22%22,\n  %22%22)\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-02-47",
            "content": "@@ -259,9 +259,8 @@\n lay:\n-%25\n .2f%7D\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-04-13",
            "content": "@@ -37,27 +37,57 @@\n elf, battery\n-Max\n+ : int, batteryMax : int, display\n  : int):%0A   \n@@ -255,16 +255,17 @@\n display:\n+%25\n .2f%7D : %7B\n@@ -324,16 +324,20 @@\n tor (%22%22,\n+ %22%22,\n  %22%22)%0A   \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-04-54",
            "content": "@@ -290,16 +290,20 @@\n ulator (\n+%22%22, \n %22%22)%0A    \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-05-20",
            "content": "@@ -215,22 +215,8 @@\n n f%22\n-display = %22 + \n %7Bsel\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-05-58",
            "content": "@@ -221,16 +221,17 @@\n splay = \n+%22\n  + %7Bself\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-06-34",
            "content": "@@ -220,17 +220,16 @@\n isplay =\n-%22\n   + %7Bsel\n@@ -246,23 +246,8 @@\n .2f%7D\n- %22, battery = %22\n  : %7B\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-07-44",
            "content": "@@ -275,16 +275,17 @@\n battery%7D\n+%22\n %0Adef mai\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-08-32",
            "content": "@@ -220,16 +220,20 @@\n isplay =\n+%22  +\n  %7Bself.d\n@@ -244,16 +244,17 @@\n ay:.2f%7D \n+%22\n , batter\n@@ -256,16 +256,20 @@\n attery =\n+ %22 :\n  %7Bself.b\n@@ -275,17 +275,16 @@\n battery%7D\n-%22\n %0Adef mai\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-09-31",
            "content": "@@ -239,16 +239,17 @@\n lay:.2f%7D\n+ \n , batter\n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_21-09-41",
            "content": "@@ -162,20 +162,17 @@\n t = 0.0%0A\n-    \n+%0A\n %0A    def\n",
            "lines": "22"
        },
        {
            "label": "2025-10-02_21-44-05",
            "content": "@@ -165,154 +165,8 @@\n  0.0\n-%0A%0A    def charge(self, value):%0A        self.battery += value%0A        if self.battery %3E self.batteryMax:%0A            self.battery = self.batteryMax\n %0A   \n",
            "lines": "21"
        },
        {
            "label": "2025-10-02_21-46-29",
            "content": "@@ -755,80 +755,8 @@\n ra)%0A\n-        elif args%5B0%5D == %22charge%22:%0A            print(calculadora.charge)%0A\n main\n",
            "lines": "26"
        },
        {
            "label": "2025-10-02_21-48-08",
            "content": "@@ -803,26 +803,27 @@\n   print(\n-C\n+c\n alcula\n-t\n+d\n or\n+a\n .charge)\n",
            "lines": "28"
        },
        {
            "label": "2025-10-02_21-48-29",
            "content": "@@ -793,25 +793,31 @@\n             \n-c\n+print(C\n alculator.ch\n@@ -820,29 +820,16 @@\n r.charge\n-(int(args%5B1%5D)\n )%0Amain()\n",
            "lines": "28"
        },
        {
            "label": "2025-10-02_21-49-04",
            "content": "@@ -804,20 +804,19 @@\n  calcula\n-d\n+t\n or\n-a\n .charge(\n",
            "lines": "28"
        },
        {
            "label": "2025-10-02_21-49-21",
            "content": "@@ -312,196 +312,8 @@\n Max%0A\n-%0A    def sum(self, a : int, b : int):%0A        if self.battery == 0:%0A            print(%22fail: bateria insuficiente%22)%0A            return%0A        self.battery -= 1%0A        self.battery -= 1%0A%0A\n     \n@@ -834,136 +834,8 @@\n %5D))%0A\n-        elif args%5B0%5D == %22sum%22:%0A            a = args%5B1%5D%0A            b = args%5B2%5D%0A            calculadora = Calculator(a, b)%0A%0A    %0A\n main\n",
            "lines": "28"
        },
        {
            "label": "2025-10-02_21-57-45",
            "content": "@@ -650,12 +650,8 @@\n or (\n-%22%22, \n %22%22)%0A\n",
            "lines": "42"
        },
        {
            "label": "2025-10-02_21-58-05",
            "content": "@@ -646,16 +646,20 @@\n ulator (\n+%22%22, \n %22%22)%0A    \n",
            "lines": "42"
        },
        {
            "label": "2025-10-02_21-58-27",
            "content": "@@ -486,23 +486,20 @@\n elf.\n-displa\n+batter\n y \n+-\n = \n-a + b\n+1\n %0A%0A  \n",
            "lines": "42"
        },
        {
            "label": "2025-10-02_21-59-10",
            "content": "@@ -1067,49 +1067,86 @@\n     \n-calculator.sum(int(args%5B1%5D), int(args%5B2%5D)\n+ a = args%5B1%5D%0A            b = args%5B2%5D%0A            calculadora = Calculator(a, b\n )%0A%0A \n",
            "lines": "42"
        },
        {
            "label": "2025-10-02_21-59-46",
            "content": "@@ -1063,28 +1063,26 @@\n         \n- \n calcula\n-d\n+t\n or\n-a\n .sum(int\n",
            "lines": "40"
        },
        {
            "label": "2025-10-02_22-00-17",
            "content": "@@ -503,211 +503,8 @@\n  b%0A%0A\n-    def division(self, num : int, den : int):%0A        if self.battery == 0:%0A            print(%22fail: bateria insuficiente%22)%0A            return%0A        self.battery -= 1%0A        self.display = num / den%0A%0A\n     \n@@ -1111,95 +1111,8 @@\n 2%5D))\n-%0A        elif args%5B0%5D == %22div%22:%0A            calculadora.div(int(args%5B1%5D), int(args%5B2%5D))\n %0A%0A  \n",
            "lines": "40"
        },
        {
            "label": "2025-10-02_22-04-11",
            "content": "@@ -1369,21 +1369,16 @@\n dora.div\n-ision\n (int(arg\n",
            "lines": "49"
        },
        {
            "label": "2025-10-02_22-04-30",
            "content": "@@ -672,73 +672,8 @@\n = 1%0A\n-        if den == 0:%0A            print(%22fail: divisao por zero%22)%0A\n     \n@@ -700,25 +700,16 @@\n um / den\n-%0A        \n %0A%0A    %0A \n",
            "lines": "49"
        },
        {
            "label": "2025-10-02_22-25-50",
            "content": "@@ -733,35 +733,16 @@\n  zero%22)%0A\n-            return%0A\n         \n",
            "lines": "52"
        },
        {
            "label": "2025-10-02_22-27-13",
            "content": "class Calculator:\n    def __init__(self, batteryMax : int):\n        self.battery : int = 0\n        self.batteryMax : int = batteryMax\n        self.display : float = 0.0\n\n    def charge(self, value):\n        self.battery += value\n        if self.battery > self.batteryMax:\n            self.battery = self.batteryMax\n\n    def sum(self, a : int, b : int):\n        if self.battery == 0:\n            print(\"fail: bateria insuficiente\")\n            return\n        self.battery -= 1\n        self.display = a + b\n\n    def division(self, num : int, den : int):\n        if self.battery == 0:\n            print(\"fail: bateria insuficiente\")\n            return\n        self.battery -= 1\n        if den == 0:\n            print(\"fail: divisao por zero\")\n            return\n        self.display = num / den\n        \n\n    \n    def __str__(self) -> str:\n        return f\"display = {self.display:.2f}, battery = {self.battery}\"\ndef main():\n    calculadora = Calculator (\"\")\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split(\" \")\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            calculadora = Calculator(int(args[1]))\n        elif args[0] == \"show\":\n            print(calculadora)\n        elif args[0] == \"charge\":\n            calculadora.charge(int(args[1]))\n        elif args[0] == \"sum\":\n            calculadora.sum(int(args[1]), int(args[2]))\n        elif args[0] == \"div\":\n            calculadora.division(int(args[1]), int(args[2]))\n\n    \nmain()",
            "lines": "53"
        }
    ]
}