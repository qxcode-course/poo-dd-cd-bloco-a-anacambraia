{
    "patches": [
        {
            "label": "2025-09-16_20-03-53",
            "content": "@@ -1,191 +1,21 @@\n-class Towel: %0A    def __init__(self):%0A        self.color = 'red'%0A        self.size = 'p'%0A        self.wetness = '0'%0A%0Atoalha = Towel()%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness\n+print('minhs toalha'\n )\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-08-54",
            "content": "@@ -129,25 +129,25 @@\n wel()%0Aprint(\n-T\n+t\n owel.color)%0A\n@@ -148,25 +148,25 @@\n olor)%0Aprint(\n-T\n+t\n owel.size)%0Ap\n@@ -170,17 +170,17 @@\n )%0Aprint(\n-T\n+t\n owel.wet\n",
            "lines": "10"
        },
        {
            "label": "2025-09-16_20-09-24",
            "content": "@@ -112,19 +112,20 @@\n  '0'%0A%0Ato\n-wel\n+alha\n  = Towel\n@@ -129,25 +129,25 @@\n wel()%0Aprint(\n-t\n+T\n owel.color)%0A\n@@ -148,25 +148,25 @@\n olor)%0Aprint(\n-t\n+T\n owel.size)%0Ap\n@@ -170,17 +170,17 @@\n )%0Aprint(\n-t\n+T\n owel.wet\n",
            "lines": "10"
        },
        {
            "label": "2025-09-16_20-09-55",
            "content": "@@ -34,30 +34,8 @@\n lf):\n- #construir meu obejto\n %0A   \n@@ -61,19 +61,8 @@\n red'\n- #atributos\n %0A   \n@@ -129,18 +129,8 @@\n el()\n- #objetosq\n %0Apri\n",
            "lines": "10"
        },
        {
            "label": "2025-09-17_13-58-55",
            "content": "@@ -32,33 +32,8 @@\n self\n-, color : str, size : str\n ): #\n@@ -56,28 +56,8 @@\n ejto\n- e definir atributos\n %0A   \n@@ -72,22 +72,16 @@\n f.color \n-: str \n = 'red' \n@@ -113,14 +113,8 @@\n ize \n-: str \n = 'p\n@@ -140,698 +140,95 @@\n ess \n-: int \n = '0'\n- \n %0A%0A\n-    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E self.getMaxWetness():%0A            \n+towel = Towel() #objetosq%0A\n print(\n-%22\n to\n-alha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A    %0A    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A%0A%0A    def show(self) -%3E None:%0A        print(self)%0A%0A    def __str__(self) -%3E str:%0A        return f%22%7Bself.color%7D %7Bself.size%7D %7Bself\n+wel.color)%0Aprint(towel.size)%0Aprint(towel\n .wetness\n %7D%22\n@@ -229,6 +229,5 @@\n ness\n-%7D%22\n+)\n",
            "lines": "10"
        },
        {
            "label": "2025-09-17_23-29-17",
            "content": "@@ -891,436 +891,4 @@\n ss%7D%22\n-%0A%0Atowel = Towel(%22Azul%22, %22P%22)%0Atowel.show()  # Azul P 0%0Atowel.dry(5)%0Atowel.show()  # Azul P 5%0Aprint(towel.isDry()) # False%0Atowel.dry(5)%0Atowel.show()  # Azul P 10%0Atowel.dry(5) # msg: toalha encharcada%0Atowel.show()  # Azul P 10%0A%0Atowel.wringOut()%0Atowel.show()  # Azul P 0%0A%0Atowel = Towel(%22Verde%22, %22G%22)%0Aprint(towel.isDry()) # True%0Atowel.dry(30)%0Atowel.show()  # Verde G 30%0Aprint(towel.isDry()) # False%0Atowel.dry(1)  # msg: toalha encharcada\n",
            "lines": "33"
        },
        {
            "label": "2025-09-17_23-30-35",
            "content": "@@ -889,16 +889,282 @@\n ness%7D%22%0A%0A\n+towel = Towel(%22Azul%22, %22P%22)%0Atowel.show()  # Azul P 0%0Atowel.dry(5)%0Atowel.show()  # Azul P 5%0Aprint(towel.isDry()) # False%0Atowel.dry(5)%0Atowel.show()  # Azul P 10%0Atowel.dry(5) # msg: toalha encharcada%0Atowel.show()  # Azul P 10%0A%0Atowel.wringOut()%0Atowel.show()  # Azul P 0%0A%0A\n towel = \n",
            "lines": "53"
        },
        {
            "label": "2025-09-17_23-31-54",
            "content": "@@ -68,11 +68,41 @@\n stru\n-tor\n+ir meu obejto e definir atributos\n %0A   \n@@ -414,16 +414,18 @@\n turn 0%0A%0A\n+  \n   def dr\n@@ -624,16 +624,190 @@\n s()%0A    \n+%0A    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A%0A%0A    def show(self) -%3E None:%0A        print(self)\n %0A%0A    de\n@@ -893,15 +893,13 @@\n %7D%22%0A%0A\n-%0A\n to\n-alha\n+wel\n  = T\n@@ -908,37 +908,48 @@\n el(%22\n-Laranja\n+Verde\n %22, %22\n-M%22)%0Atowel.show()  \n+G%22)%0Aprint(towel.isDry()) # True\n %0Atow\n@@ -959,9 +959,10 @@\n dry(\n-7\n+30\n )%0Ato\n@@ -973,9 +973,88 @@\n show()  \n- \n+# Verde G 30%0Aprint(towel.isDry()) # False%0Atowel.dry(1)  # msg: toalha encharcada\n",
            "lines": "40"
        },
        {
            "label": "2025-09-22_18-57-37",
            "content": "@@ -185,82 +185,39 @@\n     \n-    %0A   def dry(self, amount: int) -%3E None:%0A        self.wetness += amou\n+def getMaxWetness(self) -%3E i\n nt\n+:\n %0A   \n@@ -233,88 +233,51 @@\n elf.\n-wetness %3E self.getMaxWetness():%0A            print(%22toalha encharcada%22)%0A \n+size == %22P%22:%0A            return 10%0A\n         \n    s\n@@ -276,83 +276,50 @@\n     \n-  \n+if\n  self.\n-wetness = self.getMaxWetness()%0A%0A    def getMaxWetness(self) -%3E int:\n+size == %22M%22:%0A            return 20\n %0A   \n@@ -332,33 +332,33 @@\n f self.size == %22\n-P\n+G\n %22:%0A            r\n@@ -355,33 +355,33 @@\n          return \n-1\n+3\n 0%0A        if sel\n@@ -377,120 +377,222 @@\n     \n+ \n- if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A\n+return 0%0A%0A  def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E self.getMaxWetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()\n %0A   \n@@ -719,18 +719,47 @@\n M%22)%0A\n-print(toalha)\n+towel.show()  %0Atowel.dry(7)%0Atowel.show()  \n  \n",
            "lines": "30"
        },
        {
            "label": "2025-09-22_18-59-05",
            "content": "@@ -223,16 +223,17 @@\n  -%3E None\n+:\n %0A       \n",
            "lines": "30"
        },
        {
            "label": "2025-09-22_18-59-32",
            "content": "@@ -743,18 +743,4 @@\n ha) \n-%0Atoalha.dry(3)\n",
            "lines": "30"
        },
        {
            "label": "2025-09-22_19-00-38",
            "content": "@@ -223,17 +223,16 @@\n  -%3E None\n-:\n %0A       \n",
            "lines": "31"
        },
        {
            "label": "2025-09-22_19-00-53",
            "content": "@@ -185,25 +185,24 @@\n         %0A   \n- \n def dry(self\n",
            "lines": "31"
        },
        {
            "label": "2025-09-22_19-02-24",
            "content": "@@ -171,17 +171,20 @@\n : int = \n-0\n+'0' \n %0A%0A      \n",
            "lines": "31"
        },
        {
            "label": "2025-09-22_19-04-53",
            "content": "@@ -95,21 +95,21 @@\n : str = \n-color\n+'red'\n  #atribu\n@@ -138,20 +138,19 @@\n : str = \n-size\n+'p'\n %0A       \n",
            "lines": "31"
        },
        {
            "label": "2025-09-22_19-06-44",
            "content": "@@ -753,22 +753,8 @@\n a.dry(3)\n-%0Aprint(toalha)\n",
            "lines": "31"
        },
        {
            "label": "2025-09-22_19-08-16",
            "content": "@@ -771,32 +771,4 @@\n lha)\n-%0Atoalha.dry(5)%0Aprint(toalha)\n",
            "lines": "32"
        },
        {
            "label": "2025-09-22_19-09-27",
            "content": "@@ -115,80 +115,8 @@\n utos\n-, definem o estado da minha entidade Self %C3%A9 um parameto dentro da classe\n %0A   \n@@ -602,182 +602,8 @@\n  0%0A%0A\n-    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A%0A%0A    def show(self) -%3E None:%0A        print(self)%0A\n     \n@@ -728,31 +728,8 @@\n %22M%22)\n- #criando a toalha aqui\n %0Apri\n",
            "lines": "34"
        },
        {
            "label": "2025-09-22_19-37-02",
            "content": "@@ -944,32 +944,8 @@\n %22%0A%0A%0A\n-    def main():%0A        \n toal\n@@ -958,165 +958,114 @@\n owel\n- \n (%22\n+Laranja\n %22, %22\n+M\n %22)\n-%0A        while True:%0A            line:str = input()%0A            args: list%5Bstr%5D = line.split(%22 %22)%0A            if args%5B0%5D == %22end%22:%0A                break\n+ #criando a toalha aqui%0Aprint(toalha) %0Atoalha.dry(3)%0Aprint(toalha)%0Atoalha.dry(5)%0Aprint(toalha)\n",
            "lines": "43"
        },
        {
            "label": "2025-09-22_19-42-41",
            "content": "class Towel: \n    def __init__(self, color : str, size : str): #construtor\n        self.color : str = color #atributos, definem o estado da minha entidade Self \u00e9 um parameto dentro da classe\n        self.size : str = size\n        self.wetness : int = 0\n\n        \n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness > self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def wringOut(self) -> None:\n        self.wetness = 0\n    \n    def isDry(self) -> bool:\n        return self.wetness == 0\n\n\n    def show(self) -> None:\n        print(self)\n    \n\n    def __str__(self) -> str:\n        return f\"{self.color} {self.size} {self.wetness}\"\n\n\n    def main():\n        toalha = Towel (\"\", \"\")\n        while True:\n            line:str = input()\n            args: list[str] = line.split(\" \")\n            if args[0] == \"end\":\n                break",
            "lines": "44"
        }
    ]
}